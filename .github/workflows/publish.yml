
name: "publish"
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    env:
      working-directory: .

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PRIVATE_SSH_KEY }}
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0
      - name: Install libpcap (ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: sudo apt-get install libpcap-dev
      - name: Install libpcap (macos)
        if: matrix.platform == 'macos-latest'
        run: brew install libpcap
      - name: Update cargo config to use Git CLI (windows)
        if: matrix.platform == 'windows-latest'
        run: Set-Content -Path $env:USERPROFILE\.cargo\config.toml "[net]`ngit-fetch-with-cli = true"
      - name: Install WinPcap and WinPcap 4.1.2 Developer's Pack (windows)
        if: matrix.platform == 'windows-latest'
        run: |
          chocolatey install winpcap -y
          echo "WinPcap installed"
          (new-object System.Net.WebClient).DownloadFile('https://www.winpcap.org/install/bin/WpdPack_4_1_2.zip','WpdPack_4_1_2.zip')
          7z x WpdPack_4_1_2.zip
          echo "LIB=$env:GITHUB_WORKSPACE\WpdPack\Lib\x64\" >> $env:GITHUB_ENV
          echo "WinPcap Developers Pack installed"
      - name: install app dependencies and build it
        run: yarn && yarn build
        working-directory: ${{env.working-directory}}/frontend
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: nasoone-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "Nasoone v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: true
          projectPath: ${{env.working-directory}}
